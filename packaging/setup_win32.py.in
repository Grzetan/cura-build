#  Needed build-ins
import sys
import os.path
import platform

# Importing preinstalled modules to get their paths
import PyQt6
import numpy
import trimesh
import shapely

from cx_Freeze import setup, Executable, hooks


zip_includes = []


def load_numpy(finder, module):
    finder.IncludePackage("numpy.core._methods")
    finder.IncludePackage("numpy._globals")
    finder.IncludePackage("numpy.lib.format")
    finder.IncludePackage("numpy.linalg._umath_linalg")

    # Include all MKL files that are needed to get Numpy with MKL working.
    npy_dll_dir = os.path.join(module.path[0], "DLLs")
    required_mkl_files = [
        "mkl_intel_thread.1.dll",
        "mkl_core.1.dll",
        "mkl_avx.1.dll",
        "mkl_avx2.1.dll",
        "libiomp5md.dll",
        "libimalloc.dll",
        "libmmd.dll",
        "libifcoremd.dll",
        "mkl_def.1.dll",
        "mkl_mc.1.dll",
        "mkl_mc3.1.dll",
    ]

    for file in required_mkl_files:
        finder.IncludeFiles(os.path.join(npy_dll_dir, file), file)

hooks.load_numpy = load_numpy

def load_scipy(finder, module):
    finder.IncludePackage("scipy._lib")
    finder.IncludePackage("scipy.misc")
    finder.IncludePackage("scipy.sparse.csgraph._validation")
    finder.IncludePackage("scipy.sparse._csparsetools")
    finder.IncludePackage("scipy.special._ufuncs_cxx")
    finder.IncludePackage("scipy.special.specfun")

hooks.load_scipy = load_scipy

def load_pyqt6_qtquick(finder, module):
    finder.IncludeModule("PyQt6.QtCore")
    finder.IncludeModule("PyQt6.QtGui")
    finder.IncludeModule("PyQt6.QtQml")
    finder.IncludeModule("PyQt6.QtNetwork")
    finder.IncludeModule("PyQt6.QtWebSockets")
    finder.IncludeModule("PyQt6._QOpenGLFunctions_2_0")
    finder.IncludeModule("PyQt6._QOpenGLFunctions_2_1")
    finder.IncludeModule("PyQt6._QOpenGLFunctions_4_1_Core")

hooks.load_PyQt6_QtQuick = load_pyqt6_qtquick

def load_shapely(finder, module):
    finder.IncludeModule("shapely")
    shapely_path = os.path.join(os.path.dirname(shapely.__file__), "DLLs")
    required_dll_files = [
        "geos_c.dll",
    ]
    for file_name in required_dll_files:
        finder.IncludeFiles(os.path.join(shapely_path, file_name), file_name)

hooks.load_shapely = load_shapely

search_path = sys.path.copy()
search_path.insert(1, "@EXTERNALPROJECT_INSTALL_PREFIX@/lib/python3.10/site-packages/")
search_path.insert(2, "@CMAKE_PREFIX_PATH@/lib/python3.10/site-packages/")

# Dependencies are automatically detected, but it might need
# fine tuning.
build_options = {
    "build_exe": "package",
    "zip_include_packages": "*",
    "zip_exclude_packages": "certifi",
    "path": search_path,
    "packages": [
        "appdirs",
        "packaging",
        "cryptography",
        "xml.etree",
        "uuid",
        "serial",
        "zeroconf",
        "requests",
        "idna",
        "UM",
        "cura",
        "scipy.spatial",
        "sip",
        "stl",
        "shapely",
        "netifaces",
        "networkx",
        "trimesh",
        "trimesh.resources",
        "Savitar",
        "PyQt6.QtDBus",
        "PyQt6.sip",
        "comtypes",
        "Charon",
        "logging",
        "logging.config",
        "logging.handlers",
    ],
    "include_files": [
        ("@EXTERNALPROJECT_INSTALL_PREFIX@/bin/CuraEngine.exe", ""),
        ("@EXTERNALPROJECT_INSTALL_PREFIX@/lib/cura/plugins", ""),
        ("@EXTERNALPROJECT_INSTALL_PREFIX@/lib/uranium/plugins", ""),
        ("@EXTERNALPROJECT_INSTALL_PREFIX@/lib/python3.10/site-packages/UM/Qt/qml/UM", "qml/UM"),
        ("@EXTERNALPROJECT_INSTALL_PREFIX@/share/cura/resources", "resources"),
        ("@EXTERNALPROJECT_INSTALL_PREFIX@/share/uranium/resources", "resources"),
        ("@CMAKE_PREFIX_PATH@/bin/openctm.dll", ""), # For opening .CTM files
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/concrt140.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/d3dcompiler_47.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/msvcp140.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/msvcp140_1.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/msvcp140_2.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/opengl32sw.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Bluetooth.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Core.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6DBus.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Designer.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Gui.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Help.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Multimedia.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6MultimediaQuick.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6MultimediaWidgets.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Network.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Nfc.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6OpenGL.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6OpenGLWidgets.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Positioning.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6PositioningQuick.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6PrintSupport.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Qml.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QmlModels.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QmlWorkerScript.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3D.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DAssetImport.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DAssetUtils.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DEffects.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DHelpers.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DIblBaker.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DParticles.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DRuntimeRender.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Quick3DUtils.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickControls2.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickControls2Impl.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickDialogs2.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickDialogs2QuickImpl.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickDialogs2Utils.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickLayouts.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickParticles.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickShapes.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickTemplates2.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickTest.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickTimeline.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6QuickWidgets.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6RemoteObjects.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6RemoteObjectsQml.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Sensors.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6SensorsQuick.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6SerialPort.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6ShaderTools.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Sql.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Svg.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6SvgWidgets.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Test.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6WebChannel.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6WebSockets.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Widgets.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/Qt6Xml.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/vcruntime140.dll",""),
        ("@CMAKE_PREFIX_PATH@/lib/site-packages/PyQt6/Qt6/bin/vcruntime140_1.dll",""),
        # Preinstalled PyQt6 installation
        (PyQt6.__path__[0] + "/Qt6/qml/QtQml", "qml/QtQml"),
        (PyQt6.__path__[0] + "/Qt6/qml/QtQuick", "qml/QtQuick"),
    ],
    "zip_includes": zip_includes,
    "excludes": [ ],
    "replace_paths": [("*", "")],
}

executables = [
    Executable(script="@EXTERNALPROJECT_INSTALL_PREFIX@/bin/cura_app.py",
               base="Win32GUI",
               targetName = "Cura.exe",
               icon="@CMAKE_SOURCE_DIR@/packaging/cura.ico"
               ),
    Executable(script="@EXTERNALPROJECT_INSTALL_PREFIX@/bin/cura_app.py",
               base="Console",
               targetName = "CuraCLI.exe",
               icon="@CMAKE_SOURCE_DIR@/packaging/cura.ico"
               ),
]

setup(
    name = "Ultimaker Cura",
    version = "@CURA_VERSION_MAJOR@.@CURA_VERSION_MINOR@.@CURA_VERSION_PATCH@",
    description = "Ultimaker Cura",
    long_description = "Ultimaker Cura - 3D Printing Software",
    author = "Ultimaker B.V.",
    url = "http://software.ultimaker.com/",
    license = "GNU LESSER GENERAL PUBLIC LICENSE (LGPL)",

    options = {"build_exe": build_options},
    executables = executables
)
